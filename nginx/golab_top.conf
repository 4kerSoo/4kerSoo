# sudo apt install geoip-bin
# sudo yum install GeoIP GeoIP-data
geoip_country /usr/share/GeoIP/GeoIP.dat;
geoip_city /usr/share/GeoIP/GeoIPCity.dat;
geoip_proxy 127.0.0.0/8;
geoip_proxy_recursive on;

log_format json escape=json '{ "timestamp": "$time_iso8601", '
                            '"host": "$host", '
                            '"remote_addr": "$remote_addr", '
                            '"remote_user": "$remote_user", '
                            '"x_forwarded_for": "$http_x_forwarded_for", '
                            '"x_real_ip": "$http_x_real_ip", '
                            '"host": "$host", '
                            '"body_bytes_sent": "$body_bytes_sent", '
                            '"request_time": "$request_time", '
                            '"status": "$status", '
                            '"request": "$request", '
                            '"request_method": "$request_method", '
                            '"http_referrer": "$http_referer", '
                            '"http_user_agent": "$http_user_agent" }';

server {
    server_name golab.top;

    access_log /var/log/nginx/golab_top.log;
    error_log /var/log/nginx/golab_top.error.log;

    location = / {
        default_type text/plain;
        set $ip $remote_addr;
        if ($http_x_real_ip != ''){
            set $ip $http_x_real_ip;
        }
        set $content '$ip    $geoip_city_country_name $geoip_city\n';
        if ($http_user_agent ~* "^Mozilla") {
            add_header  Content-Type 'application/json';
            set $content '{\n\t"ip":"$ip",\n\t"country":"$geoip_city_country_name",\n\t"city":"$geoip_city"\n}';
        }
        return 200 $content;
    }

    location ~ /metrics {
        #rewrite ^ /cgi-bin/node_exporter.cgi last;
        proxy_pass http://127.0.0.1:9100;
        proxy_http_version 1.1;
        proxy_read_timeout 90;
        proxy_set_header host $host;
        proxy_set_header connection "";
        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
        proxy_set_header x-forwarded-proto https;
        proxy_set_header x-real-ip $remote_addr;
        proxy_redirect off;
        proxy_redirect http:// https://;

        # upgrade connection for websocket
        set $proxy_upgrade "";
        set $proxy_connection "";
        if ($http_upgrade != ''){
            set $proxy_upgrade $http_upgrade;
            set $proxy_connection "upgrade";
        }
        proxy_set_header upgrade $proxy_upgrade;
        proxy_set_header connection $proxy_connection;
    }
}

upstream backend_api_servers {
    zone upstream_dynamic 64k;
    keepalive 64;

    #ip_hash;
    server 127.0.0.1:10001 max_fails=0 fail_timeout=3s;
    server 127.0.0.1:10002 max_fails=0 fail_timeout=3s;
}

server {
    server_name api.golab.top;

    access_log /var/log/nginx/api_golab_top.log json buffer=32k flush=5s;
    error_log /var/log/nginx/api_golab_top.error.log;

    add_header access-control-allow-origin "*";
    add_header access-control-allow-headers "Origin, X-Requested-With, Content-Type, Accept, Connection, User-Agent, Cookie, Authorization";
    add_header access-control-allow-methods "PUT,POST,GET,DELETE,OPTIONS";
    add_header access-control-allow-credentials true;

    gzip on;
    gzip_proxied any;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        application/javascript
        application/x-javascript
        application/json;

    location / {
        proxy_pass http://backend_api_servers;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_http_version 1.1;
        proxy_read_timeout 90;
        proxy_redirect off;
        proxy_set_header host $host;
        proxy_set_header connection "";
        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
        proxy_set_header x-forwarded-proto https;
        proxy_set_header x-real-ip $remote_addr;
        break;
    }
}

proxy_cache_path /var/cache/nginx/cache_phus_lu levels=1:2 keys_zone=cache_phus_lu:100m inactive=1d max_size=1g;

server {
    server_name cache.golab.top;

    access_log /var/log/nginx/cache_golab_top.log main buffer=32k flush=5s;
    error_log /var/log/nginx/cache_golab_top.error.log;

    gzip on;
    gzip_proxied any;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        application/javascript
        application/x-javascript
        application/json;

    location / {
        resolver 1.1.1.1 valid=300s ipv6=off;
        set $backend "phuslu.github.io";

        proxy_pass             https://$backend;
        proxy_http_version     1.1;
        proxy_redirect         off;

        proxy_set_header   host             $backend;
        proxy_set_header   connection       "";
        proxy_set_header   x-forwarded-for  $proxy_add_x_forwarded_for;
        #proxy_set_header   x-real-ip        $remote_addr;

        # see https://linux.cn/article-5945-1.html
        proxy_cache            cache_phus_lu;
        proxy_cache_key        $host$uri$is_args$args;
        proxy_cache_valid      200 2d;
        proxy_cache_valid      any 1d;
        proxy_cache_min_uses   1;
        proxy_cache_lock       on;
        proxy_cache_revalidate on;
        proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;

        # make edge server happy
        add_header           cache-control "public, max-age=86400";
        proxy_hide_header    cache-control;
        proxy_ignore_headers cache-control;

        # make cloudflare edge server happy
        proxy_set_header     Cookie "";
        proxy_set_header     CF-Visitor "";
        proxy_set_header     CF-RAY "";
        proxy_set_header     CF-Connecting-IP "";
        proxy_set_header     CF-IPCountry "";
        add_header     Cookie "";
        add_header     CF-Visitor "";
        add_header     CF-RAY "";
        add_header     CF-Connecting-IP "";
        add_header     CF-IPCountry "";
    }
}

server {
    server_name git.golab.top;

    access_log /var/log/nginx/git_golab_top.log;
    error_log /var/log/nginx/git_golab_top.error.log;

    root /usr/share/cgit;
    try_files $uri @cgit;

    location @cgit {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /usr/lib/cgit/cgit.cgi;
        fastcgi_param PATH_INFO $uri;
        fastcgi_param QUERY_STRING $args;
        fastcgi_param HTTP_HOST $server_name;
        fastcgi_pass unix:/run/fcgiwrap.socket;
    }
}

map $host $backend {
    grafana.lab.phus.lu "127.0.0.1:3000";
    splunk.lab.phus.lu "127.0.0.1:8000";
    prometheus.lab.phus.lu "127.0.0.1:9090";
    gateway.lab.phus.lu "192.168.2.1:80";
}

server {
    server_name *.golab.top;

    access_log /var/log/nginx/golab_top.log;
    error_log /var/log/nginx/golab_top.error.log;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain text/xml text/css application/x-javascript application/json;

    location / {
        proxy_pass http://$backend;
        proxy_http_version 1.1;
        proxy_read_timeout 90;
        proxy_redirect off;
        proxy_set_header host $host;
        proxy_set_header connection "";
        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
        proxy_set_header x-forwarded-proto https;
        proxy_set_header x-real-ip $remote_addr;
    }
}


